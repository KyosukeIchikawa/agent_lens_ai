<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<svg width="800" height="580" viewBox="0 0 800 580" xmlns="http://www.w3.org/2000/svg">
  <!-- 背景と全体フレーム - 透過背景に変更 -->
  <rect x="10" y="10" width="780" height="560" rx="15" ry="15" fill="none" stroke="#333333" stroke-width="2" />
  <text x="400" y="45" font-family="Roboto, sans-serif" font-size="22" font-weight="bold" text-anchor="middle">Figure 2: Operator Discovery</text>
  
  <!-- 上部の概念説明 -->
  <rect x="50" y="70" width="700" height="50" rx="8" ry="8" fill="#e8f4fd" stroke="#3498db" stroke-width="1.5" />
  <text x="400" y="100" font-family="Noto Sans JP, sans-serif" font-size="14" text-anchor="middle">エージェントは記号的状態遷移から仮説的演算子を抽出し、計画とLTL式生成に活用する</text>
  
  <!-- ステップ1: 状態遷移収集 (左上) -->
  <rect x="50" y="140" width="340" height="160" rx="10" ry="10" fill="#e8f4fd" stroke="#3498db" stroke-width="1.5" />
  <text x="220" y="165" font-family="Roboto, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">Symbolic Transitions</text>
  <text x="220" y="185" font-family="Noto Sans JP, sans-serif" font-size="12" text-anchor="middle">記号的状態遷移</text>
  
  <!-- 状態遷移の具体例 -->
  <rect x="70" y="200" width="300" height="80" rx="5" ry="5" fill="white" stroke="#333333" stroke-width="1" />
  <text x="220" y="225" font-family="Source Code Pro, monospace" font-size="12" text-anchor="middle">状態s: [位置(2,3), ドア閉]</text>
  <text x="220" y="245" font-family="Source Code Pro, monospace" font-size="12" text-anchor="middle">行動a: [使用(鍵)]</text>
  <text x="220" y="265" font-family="Source Code Pro, monospace" font-size="12" text-anchor="middle">結果s': [位置(2,3), ドア開]</text>
  
  <!-- ステップ2: 演算子抽象化 (右上) -->
  <rect x="410" y="140" width="340" height="160" rx="10" ry="10" fill="#e8f8f1" stroke="#2ecc71" stroke-width="1.5" />
  <text x="580" y="165" font-family="Roboto, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">Lifted Operators</text>
  <text x="580" y="185" font-family="Noto Sans JP, sans-serif" font-size="12" text-anchor="middle">抽象化された演算子</text>
  
  <!-- 抽象化された演算子の例 -->
  <rect x="430" y="200" width="300" height="80" rx="5" ry="5" fill="white" stroke="#333333" stroke-width="1" />
  <text x="580" y="225" font-family="Source Code Pro, monospace" font-size="12" text-anchor="middle">open_door(?pos)</text>
  <text x="580" y="245" font-family="Source Code Pro, monospace" font-size="12" text-anchor="middle">前提条件: [位置(?pos), ドア閉]</text>
  <text x="580" y="265" font-family="Source Code Pro, monospace" font-size="12" text-anchor="middle">効果: [ドア閉 → ドア開]</text>
  
  <!-- ステップ3: 計画立案 (左下) -->
  <rect x="50" y="320" width="340" height="160" rx="10" ry="10" fill="#e8f4fd" stroke="#3498db" stroke-width="1.5" />
  <text x="220" y="345" font-family="Roboto, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">Planning</text>
  <text x="220" y="365" font-family="Noto Sans JP, sans-serif" font-size="12" text-anchor="middle">計画立案</text>
  
  <!-- 計画の例 -->
  <rect x="70" y="380" width="300" height="80" rx="5" ry="5" fill="white" stroke="#333333" stroke-width="1" />
  <text x="220" y="405" font-family="Source Code Pro, monospace" font-size="12" text-anchor="middle">1. move_to(door_location)</text>
  <text x="220" y="425" font-family="Source Code Pro, monospace" font-size="12" text-anchor="middle">2. open_door(door_location)</text>
  <text x="220" y="445" font-family="Source Code Pro, monospace" font-size="12" text-anchor="middle">3. move_to(goal_location)</text>
  
  <!-- ステップ4: LTL式生成 (右下) -->
  <rect x="410" y="320" width="340" height="160" rx="10" ry="10" fill="#fceae8" stroke="#e74c3c" stroke-width="1.5" />
  <text x="580" y="345" font-family="Roboto, sans-serif" font-size="16" font-weight="bold" text-anchor="middle">LTL Formula Generation</text>
  <text x="580" y="365" font-family="Noto Sans JP, sans-serif" font-size="12" text-anchor="middle">LTL式の生成</text>
  
  <!-- LTL式の例 -->
  <rect x="430" y="380" width="300" height="80" rx="5" ry="5" fill="white" stroke="#333333" stroke-width="1" />
  <text x="580" y="405" font-family="Source Code Pro, monospace" font-size="12" text-anchor="middle">F(at(door_location) ∧</text>
  <text x="580" y="425" font-family="Source Code Pro, monospace" font-size="12" text-anchor="middle">  F(door_open ∧</text>
  <text x="580" y="445" font-family="Source Code Pro, monospace" font-size="12" text-anchor="middle">    F(at(goal_location))))</text>
  
  <!-- 矢印の定義 -->
  <defs>
    <marker id="arrowhead" markerWidth="10" markerHeight="7" refX="9" refY="3.5" orient="auto">
      <polygon points="0 0, 10 3.5, 0 7" />
    </marker>
  </defs>
  
  <!-- 接続矢印 -->
  <path d="M 390 220 L 410 220" fill="none" stroke="#333333" stroke-width="2" marker-end="url(#arrowhead)" />
  <text x="400" y="210" font-family="Noto Sans JP, sans-serif" font-size="12" text-anchor="middle">抽象化</text>
  
  <path d="M 220 300 L 220 320" fill="none" stroke="#333333" stroke-width="2" marker-end="url(#arrowhead)" />
  <text x="240" y="310" font-family="Noto Sans JP, sans-serif" font-size="12" text-anchor="middle">演算子活用</text>
  
  <path d="M 580 300 L 580 320" fill="none" stroke="#333333" stroke-width="2" marker-end="url(#arrowhead)" />
  <text x="600" y="310" font-family="Noto Sans JP, sans-serif" font-size="12" text-anchor="middle">演算子活用</text>
  
  <path d="M 390 420 L 410 420" fill="none" stroke="#333333" stroke-width="2" marker-end="url(#arrowhead)" />
  <text x="400" y="410" font-family="Noto Sans JP, sans-serif" font-size="12" text-anchor="middle">変換</text>
  
  <!-- 報酬機構 -->
  <rect x="200" y="500" width="400" height="50" rx="8" ry="8" fill="#e8f8f1" stroke="#2ecc71" stroke-width="1.5" />
  <text x="400" y="530" font-family="Noto Sans JP, sans-serif" font-size="14" text-anchor="middle">LTL式に基づく報酬機械と内発的好奇心報酬が学習を促進</text>
  
  <!-- 下部への接続 -->
  <path d="M 580 480 L 580 500" fill="none" stroke="#333333" stroke-width="2" marker-end="url(#arrowhead)" stroke-dasharray="5,5" />
  <path d="M 220 480 L 220 500" fill="none" stroke="#333333" stroke-width="2" marker-end="url(#arrowhead)" stroke-dasharray="5,5" />
</svg>