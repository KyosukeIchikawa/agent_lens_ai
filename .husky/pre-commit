#!/bin/sh
# Nodeの環境を設定
export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"

# .nvmrcがあれば、適切なNodeバージョンを使用
if [ -f ".nvmrc" ]; then
  nvm use
fi

echo "🔍 通常のリンクチェックを実行中..."
npm run check-links

# 通常のリンクチェックが失敗した場合
if [ $? -ne 0 ]; then
  echo "❌ リンクチェックに失敗しました。コミットを中止します。"
  echo "修正してから再度コミットしてください。"
  exit 1
fi

echo "✅ リンクチェックに成功しました。"

echo "🔍 ステージングされたファイルにフォーマットを適用中..."
npx prettier --write "$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.(js|jsx|ts|tsx|json|md)$')"

echo "🔍 ステージングされたファイルのESLintエラーをチェック中（警告は無視）..."
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.(js|jsx|ts|tsx)$')
if [ -n "$STAGED_FILES" ]; then
  # エラーのみをチェックする（警告は無視）
  npx eslint --quiet $STAGED_FILES
  
  # エラーがある場合のみコミットを中止
  if [ $? -ne 0 ]; then
    echo "❌ ESLintのエラーが見つかりました。コミットを中止します。"
    echo "エラーを修正してから再度コミットしてください。"
    exit 1
  fi
fi

echo "✅ コード整形とESLintエラーチェックに成功しました。"